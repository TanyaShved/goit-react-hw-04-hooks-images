{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.jsx","services/image-api.js","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.jsx","index.jsx","components/Searchbar/Searcbar.module.css"],"names":["module","exports","Searcbar","onSubmit","useState","imageName","setImageName","className","s","Searchbar","e","preventDefault","trim","toast","warn","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","api","fetchImages","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","onClick","largeImageURL","isFirstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","src","alt","ImageGalleryItem","webformatURL","tags","showModal","setShowModal","toggleModal","ImageGalleryItem_image","Button","Status","ImageGallery","onChangeImage","images","setImages","error","setError","status","setStatus","setPage","prevPageRef","prevPage","console","log","fetchImageGallery","useCallback","imagesAPI","hits","length","prevImages","catch","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","timeout","message","map","id","App","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,uBAAyB,mD,mBCAzGD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,qJCkDlBC,EA7CE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACCC,mBAAS,IADV,mBAC1BC,EAD0B,KACfC,EADe,KAoBjC,OACE,wBAAQC,UAAWC,IAAEC,UAArB,SACE,uBAAMN,SAfW,SAAAO,GACnBA,EAAEC,iBAGuB,KAArBN,EAAUO,QAKdT,EAASE,GACTC,EAAa,KALXO,IAAMC,KAAK,iGAUmBP,UAAWC,IAAEO,WAA3C,UACE,wBAAQC,KAAK,SAAST,UAAWC,IAAES,kBAAnC,SACE,sBAAMV,UAAWC,IAAEU,wBAAnB,sBAGF,uBACEX,UAAWC,IAAEW,iBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOlB,EACPmB,SA/BiB,SAAAd,GACvBJ,EAAaI,EAAEe,cAAcF,MAAMG,wB,QCMvC,IAEeC,EAFH,CAAEC,YAbd,SAAqBvB,EAAWwB,GAC9B,OAAOC,MAAM,GAAD,OAHG,2BAGH,cACOzB,EADP,iBACyBwB,EADzB,gBAJE,qCAIF,yDAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,2KAA4ChC,U,iBCN5CiC,EAAYC,SAASC,cAAc,eAwD1BC,EAtDD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClBC,EAAgBC,kBAAO,GAE/BC,qBAAU,WACN,OAAIF,EAAcG,SAChBC,OAAOC,iBAAiB,UAAWC,QACnCN,EAAcG,SAAU,IAGnB,WACLC,OAAOG,oBAAoB,UAAWD,OAiB1C,IAAMA,EAAgB,SAAAxC,GACL,WAAXA,EAAE0C,MACJV,KAUF,OAAOW,uBACL,qBAAK9C,UAAWC,IAAE8C,QAASZ,QAPH,SAAAhC,GACtBA,EAAEe,gBAAkBf,EAAE6C,QACxBb,KAKA,SACE,qBAAKnC,UAAWC,IAAEiC,MAAlB,SACE,qBAAKe,IAAKb,EAAec,IAAI,SAGjCnB,I,iBCZSoB,EAnCU,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,aAAchB,EAA0B,EAA1BA,cAAeiB,EAAW,EAAXA,KAAW,EAChCxD,oBAAS,GADuB,mBAC3DyD,EAD2D,KAChDC,EADgD,KAG5DC,EAAc,WAClBD,GAAa,SAACD,GAAD,OACVA,MAGH,OACE,mCACE,qBAAItD,UAAWC,IAAEkD,iBAAjB,UACE,qBACEhB,QAASqB,EACTP,IAAKG,EACLF,IAAKG,EACLrD,UAAWC,IAAEwD,yBAEdH,GACC,cAAC,EAAD,CACEnB,QAASqB,EACTpB,cAAeA,EACfc,IAAKG,U,iBCXJK,EAZA,SAAC,GAAiB,IAAfvB,EAAc,EAAdA,QAChB,OACE,wBAAQ1B,KAAK,SAAST,UAAWC,IAAEyD,OAAQvB,QAASA,EAApD,wB,0CCIEwB,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WA2HGC,EAxHM,SAAC,GAAkC,IAAhC9D,EAA+B,EAA/BA,UAAW+D,EAAoB,EAApBA,cAAoB,EACzBhE,mBAAS,IADgB,mBAC9CiE,EAD8C,KACtCC,EADsC,OAE3BlE,mBAAS,MAFkB,mBAE9CmE,EAF8C,KAEvCC,EAFuC,OAGzBpE,mBAAS8D,GAHgB,mBAG9CO,EAH8C,KAGtCC,EAHsC,OAI7BtE,mBAAS,GAJoB,mBAI9CyB,EAJ8C,KAIxC8C,EAJwC,KAM/CC,EAAc/B,mBAEpBC,qBAAU,WACR8B,EAAY7B,QAAUlB,KAGxB,IAAMgD,EAAWD,EAAY7B,QAC7B+B,QAAQC,IAAIF,GACZC,QAAQC,IAAIlD,GAGdiB,qBAAU,WACNsB,EAAc,MACb,CAACA,IAEN,IAAMY,EAAoBC,uBACtB,WACEC,EACGtD,YAAYvB,EAAWwB,GACvBE,MAAK,SAAAsC,GACJ,OAA2B,IAAvBA,EAAOc,KAAKC,QACdd,GAAU,SAAAe,GAAU,4BACdA,GADc,YACChB,EAAOc,eAC5BT,EAAUR,IAIL/B,QAAQC,OACb,IAAIC,MAAJ,2KAA4ChC,QAG/CiF,OAAM,SAAAf,GACLC,EAASD,GACTG,EAAUR,QAEb,CAAC7D,EAAWwB,IAmCf,OAjCFiB,qBAAU,WACFzC,IAGO,IAATwB,GACFmD,IAEEH,IAAahD,EACfmD,KAGCN,EAAUR,GACXI,EAAU,IACVK,EAAQ,OAET,CAAC9C,EAAMmD,EAAmB3E,EAAWwE,IAWxC/B,qBAAU,WACRE,OAAOuC,SAAS,CACdC,IAAKjD,SAASkD,gBAAgBC,aAC9BC,SAAU,aAEX,CAACtB,IAEEI,IAAWP,EACN,6HAGLO,IAAWP,EAEX,cAAC,IAAD,CACElD,KAAK,OACL4E,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAKXtB,IAAWP,EACN,6BAAKK,EAAMyB,UAGhBvB,IAAWP,EAEX,qCACE,oBAAI3D,UAAWC,IAAE2D,aAAjB,SACGE,EAAO4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIvC,EAAP,EAAOA,aAAchB,EAArB,EAAqBA,cAAeiB,EAApC,EAAoCA,KAApC,OACV,cAAC,EAAD,CAEED,aAAcA,EACdhB,cAAeA,EACfiB,KAAMA,GAHDsC,QAOX,cAAC,EAAD,CAAQxD,QAAS,kBAAMiC,EAAQ9C,EAAO,cAb5C,GC5FWsE,EAfH,WAAO,IAAD,EACkB/F,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,KAGd,OACE,qCACE,cAAC,EAAD,CAAUH,SAAUG,IACpB,cAAC,EAAD,CACED,UAAWA,EACX+D,cAAe9D,IAEjB,cAAC,IAAD,CAAgB8F,SAAS,mBCVjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhE,SAASiE,eAAe,U,kBCR1BxG,EAAOC,QAAU,CAAC,UAAY,4BAA4B,WAAa,6BAA6B,kBAAoB,oCAAoC,wBAA0B,0CAA0C,iBAAmB,sC","file":"static/js/main.c6a0358a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__1P7Nb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Searcbar.module.css';\n\nconst Searcbar = ({ onSubmit }) => {\n  const [imageName, setImageName] = useState('');\n\n  const hendelNameChange = e => {\n    setImageName(e.currentTarget.value.toLowerCase());\n  };\n\n  const hendelSubmit = e => {\n    e.preventDefault();\n\n    // проверяем не пустой ли нам инпут\n    if (imageName.trim() === '') {\n      toast.warn('Ввидите название!');\n      return;\n    }\n\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={hendelSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchForm_button}>\n          <span className={s.SearchForm_button_label}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={hendelNameChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearcbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\nexport default Searcbar;\n","const API_KEY = '19013398-a980467a71ce13bd0d53bc132';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(imageName, page) {\n  return fetch(\n    `${BASE_URL}?q=${imageName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`Нет галлереи с таким названием ${imageName}`),\n    );\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;\n","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClick, largeImageURL }) => {\n  const isFirstRender = useRef(true);\n\nuseEffect(() => {\n    if (isFirstRender.current) {\n      window.addEventListener('keydown', handleKeyDown);\n      isFirstRender.current = false;\n      return;\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n//   useEffect(() => {\n//     window.addEventListener('keydown', handleKeyDown);\n//     window.removeEventListener('keydown', handleKeyDown);\n// })\n\n  // componentDidMount() {\n  //   window.addEventListener('keydown', this.handleKeyDown);\n  // }\n\n  // componentWillUnmount() {\n  //   window.removeEventListener('keydown', handleKeyDown);\n  // }\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClick();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClick();\n    }\n  };\n\n    return createPortal(\n      <div className={s.Overlay} onClick={handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  };\n\nModal.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n  };\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../components/Modal/Modal';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, tags }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal((showModal) => (\n      !showModal));\n  };\n\n    return (\n      <>\n        <li className={s.ImageGalleryItem}>\n          <img\n            onClick={toggleModal}\n            src={webformatURL}\n            alt={tags}\n            className={s.ImageGalleryItem_image}\n          />\n          {showModal && (\n            <Modal\n              onClick={toggleModal}\n              largeImageURL={largeImageURL}\n              alt={tags}\n            />\n          )}\n        </li>\n      </>\n    );\n  };\n\nImageGalleryItem.propTypes = {\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  };\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClick}>\n      Load More\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport imagesAPI from '../../services/image-api';\nimport ImageGalleryItem from '../../components/ImageGalleryItem/ImageGalleryItem';\nimport Button from '../../components/Button/Button';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './ImageGallery.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst ImageGallery = ({ imageName, onChangeImage }) => {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n\n  const prevPageRef = useRef();\n\n  useEffect(() => {\n    prevPageRef.current = page;\n  });\n\n  const prevPage = prevPageRef.current;\n  console.log(prevPage)\n  console.log(page)\n  \n\nuseEffect(() => {\n    onChangeImage('');\n  }, [onChangeImage]);\n\nconst fetchImageGallery = useCallback(\n    () => {\n      imagesAPI\n        .fetchImages(imageName, page)\n        .then(images => {\n          if (images.hits.length !== 0) {\n            setImages(prevImages =>\n              [...prevImages, ...images.hits]);\n            setStatus(Status.RESOLVED);\n\n            return;\n          }\n          return Promise.reject(\n            new Error(`Нет галлереи с таким названием ${imageName}`),\n          );\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    }, [imageName, page]);\n\n  useEffect(() => {\n     if (!imageName) {\n       return;\n    }\n    if (page === 1) {\n      fetchImageGallery();\n    }\n    if (prevPage !== page) {\n      fetchImageGallery();\n    }\n    else {\n       setStatus(Status.PENDING);\n      setImages([]);\n      setPage(1);\n    }\n  }, [page, fetchImageGallery, imageName, prevPage]);\n\n  // useEffect(() => {\n  //   if (!imageName) {\n  //      return;\n  //   }\n  //   if (prevPage !== page) {\n  //     fetchImageGallery();\n  //   }\n  // }, [page, fetchImageGallery, imageName, prevPage])\n    \n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [images]);\n\n    if (status === Status.IDLE) {\n      return <h1>Ввидите название</h1>;\n    }\n\n    if (status === Status.PENDING) {\n      return (\n        <Loader\n          type=\"Bars\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      );\n    }\n\n    if (status === Status.REJECTED) {\n      return <h1>{error.message}</h1>;\n    }\n\n    if (status === Status.RESOLVED) {\n      return (\n        <>\n          <ul className={s.ImageGallery}>\n            {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n              <ImageGalleryItem\n                key={id}\n                webformatURL={webformatURL}\n                largeImageURL={largeImageURL}\n                tags={tags}\n              />\n            ))}\n          </ul>\n          <Button onClick={() => setPage(page + 1)} />\n        </>\n      );\n    }\n  };\n\nImageGallery.propTypes = {\n    imageName: PropTypes.string.isRequired,\n    onChangeImage: PropTypes.func.isRequired,\n  };\n\nexport default ImageGallery;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searcbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\n\nconst App = () => {\n  const [imageName, setImageName] = useState('');\n\n    return (\n      <>\n        <Searcbar onSubmit={setImageName} />\n        <ImageGallery\n          imageName={imageName}\n          onChangeImage={setImageName}\n        />\n        <ToastContainer position=\"top-center\" />\n      </>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searcbar_Searchbar__srXIb\",\"SearchForm\":\"Searcbar_SearchForm__P4C8_\",\"SearchForm_button\":\"Searcbar_SearchForm_button__1CVq2\",\"SearchForm_button_label\":\"Searcbar_SearchForm_button_label__1B5iQ\",\"SearchForm_input\":\"Searcbar_SearchForm_input__1YCxI\"};"],"sourceRoot":""}